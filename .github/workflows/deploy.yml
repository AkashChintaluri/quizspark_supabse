name: Deploy Backend

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  EC2_IP: "13.127.72.180"  # Using the existing instance's IP

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: "1.0.0"

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform

    - name: Terraform Plan
      run: terraform plan -out=tfplan
      working-directory: ./terraform

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan
      working-directory: ./terraform

    - name: Build Docker Image
      run: |
        docker build -t quizspark-backend .
        docker save quizspark-backend | gzip > quizspark-backend.tar.gz

    - name: Upload Docker Image to S3
      run: |
        aws s3 cp quizspark-backend.tar.gz s3://quizspark-deployments/quizspark-backend.tar.gz

    - name: Deploy to EC2 using SSM
      run: |
        # Get instance ID from Terraform
        INSTANCE_ID=$(terraform output -raw instance_id)
        
        # Download and load Docker image
        aws ssm send-command \
          --instance-ids $INSTANCE_ID \
          --document-name "AWS-RunShellScript" \
          --parameters 'commands=[
            "aws s3 cp s3://quizspark-deployments/quizspark-backend.tar.gz /home/ubuntu/quizspark-backend.tar.gz",
            "docker load < /home/ubuntu/quizspark-backend.tar.gz",
            "docker stop quizspark-backend || true",
            "docker rm quizspark-backend || true",
            "docker run -d --name quizspark-backend -p 3000:3000 -e SUPABASE_URL=${{ secrets.SUPABASE_URL }} -e SUPABASE_KEY=${{ secrets.SUPABASE_KEY }} quizspark-backend"
          ]'
      working-directory: ./terraform

    - name: Verify Deployment
      run: |
        until curl -s http://${{ env.EC2_IP }}:3000; do
          echo "Waiting for application to be ready..."
          sleep 5
        done

    - name: Output Deployment URL
      run: |
        echo "Backend deployed at: http://${{ env.EC2_IP }}:3000"
