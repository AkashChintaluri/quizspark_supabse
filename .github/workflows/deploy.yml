name: AWS CodeDeploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  EC2_IP: "13.127.72.180"
  EC2_DNS: "ec2-13-127-72-180.ap-south-1.compute.amazonaws.com"
  APPLICATION_NAME: "quizspark"
  DEPLOYMENT_GROUP: "quizspark-production"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Build Docker Image
      run: |
        docker build -t quizspark-backend .
        docker save quizspark-backend | gzip > quizspark-backend.tar.gz

    - name: Upload to S3
      run: |
        aws s3 cp quizspark-backend.tar.gz s3://quizspark-deployments/quizspark-backend.tar.gz

    - name: Create Deployment
      run: |
        # Create deployment
        DEPLOYMENT_ID=$(aws deploy create-deployment \
          --application-name ${{ env.APPLICATION_NAME }} \
          --deployment-group-name ${{ env.DEPLOYMENT_GROUP }} \
          --s3-location bucket=quizspark-deployments,bundleType=zip,key=quizspark-backend.tar.gz \
          --query 'deploymentId' \
          --output text)

        echo "Deployment ID: $DEPLOYMENT_ID"

        # Wait for deployment to complete
        while true; do
          STATUS=$(aws deploy get-deployment \
            --deployment-id $DEPLOYMENT_ID \
            --query 'deploymentInfo.status' \
            --output text)
          
          echo "Deployment status: $STATUS"
          
          if [ "$STATUS" = "Succeeded" ]; then
            echo "Deployment completed successfully"
            break
          elif [ "$STATUS" = "Failed" ] || [ "$STATUS" = "Stopped" ]; then
            echo "Deployment failed or was stopped"
            exit 1
          fi
          
          sleep 30
        done

    - name: Verify Deployment
      run: |
        sleep 10
        response=$(curl -s -o /dev/null -w "%{http_code}" http://${{ env.EC2_DNS }}:3000/api/upcoming-quizzes/1)
        if [ "$response" != "200" ]; then
          echo "Error: Application is not responding correctly"
          exit 1
        fi

    - name: Output Deployment URL
      run: |
        echo "Backend deployed at: http://${{ env.EC2_DNS }}:3000"