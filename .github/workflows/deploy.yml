name: Deploy Backend

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  EC2_IP: "13.127.72.180"  # Using the existing instance's IP

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Build Docker Image
      run: |
        docker build -t quizspark-backend .
        docker save quizspark-backend | gzip > quizspark-backend.tar.gz

    - name: Create deployment package
      run: |
        mkdir -p deployment
        cp quizspark-backend.tar.gz deployment/
        cp appspec.yml deployment/
        cp scripts/* deployment/
        cd deployment
        zip -r ../deployment.zip .

    - name: Upload to S3
      run: |
        aws s3 cp deployment.zip s3://quizspark-deployments/deployment.zip

    - name: Check and Create CodeDeploy Application
      run: |
        # Check if application exists
        if ! aws deploy get-application --application-name quizspark-backend 2>/dev/null; then
          echo "Creating CodeDeploy application..."
          aws deploy create-application --application-name quizspark-backend
          
          echo "Creating deployment group..."
          aws deploy create-deployment-group \
            --application-name quizspark-backend \
            --deployment-group-name quizspark-production \
            --ec2-tag-filters Key=Name,Value=quizspark-backend,Type=KEY_AND_VALUE \
            --service-role-arn arn:aws:iam::$(aws sts get-caller-identity --query Account --output text):role/CodeDeployServiceRole
        else
          echo "CodeDeploy application already exists"
        fi

    - name: Deploy using CodeDeploy
      run: |
        aws deploy create-deployment \
          --application-name quizspark-backend \
          --deployment-group-name quizspark-production \
          --s3-location bucket=quizspark-deployments,bundleType=zip,key=deployment.zip

    - name: Wait for deployment
      run: |
        DEPLOYMENT_ID=$(aws deploy list-deployments \
          --application-name quizspark-backend \
          --deployment-group-name quizspark-production \
          --max-items 1 \
          --query 'deployments[0]' \
          --output text)
        
        aws deploy wait deployment-successful \
          --deployment-id $DEPLOYMENT_ID

    - name: Verify Deployment
      run: |
        until curl -s http://${{ env.EC2_IP }}:3000; do
          echo "Waiting for application to be ready..."
          sleep 5
        done

    - name: Output Deployment URL
      run: |
        echo "Backend deployed at: http://${{ env.EC2_IP }}:3000"
